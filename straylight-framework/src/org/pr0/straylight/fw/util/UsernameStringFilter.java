/* $Id: UsernameStringFilter.java,v 1.1 2002/02/05 21:51:40 racon Exp $ */

package org.pr0.straylight.fw.util;

import org.apache.regexp.RE;
import org.apache.regexp.REProgram;

/**
 * <p>
 *  Checks for a valid username of 12 characters with no special characters
 *  and no symbols included. Username must be at least 3 characters long
 *  and has a maximal length of 12. The valid characters are a-z (lower
 *  case) and 0-9.
 * </p>
 * <p>
 *  If the username does not match the pattern the filter will throw an
 *  exception.
 * </p>
 * 
 * @author <a href="mailto:ob@pr0.org">Oliver Baltzer</a>
 * @version $Revision: 1.1 $ $Date: 2002/02/05 21:51:40 $
 */
public class UsernameStringFilter implements StringFilter
{
    // Pre-compiled regular expression '^[a-z0-9]{3,12}'
    private static char[] usernamePatternInstructions = 
    {
        0x007c, 0x0000, 0x00ab, 0x005e, 0x0000, 0x0003, 0x005b, 
        0x0002, 0x0007, 0x0061, 0x007a, 0x0030, 0x0039, 0x005b, 
        0x0002, 0x0007, 0x0061, 0x007a, 0x0030, 0x0039, 0x007c, 
        0x0000, 0x000a, 0x005b, 0x0002, 0x000a, 0x0061, 0x007a, 
        0x0030, 0x0039, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 
        0x0003, 0x007c, 0x0000, 0x000a, 0x005b, 0x0002, 0x000a, 
        0x0061, 0x007a, 0x0030, 0x0039, 0x007c, 0x0000, 0x0003, 
        0x004e, 0x0000, 0x0003, 0x007c, 0x0000, 0x000a, 0x005b, 
        0x0002, 0x000a, 0x0061, 0x007a, 0x0030, 0x0039, 0x007c, 
        0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 0x007c, 0x0000, 
        0x000a, 0x005b, 0x0002, 0x000a, 0x0061, 0x007a, 0x0030, 
        0x0039, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 
        0x007c, 0x0000, 0x000a, 0x005b, 0x0002, 0x000a, 0x0061, 
        0x007a, 0x0030, 0x0039, 0x007c, 0x0000, 0x0003, 0x004e, 
        0x0000, 0x0003, 0x007c, 0x0000, 0x000a, 0x005b, 0x0002, 
        0x000a, 0x0061, 0x007a, 0x0030, 0x0039, 0x007c, 0x0000, 
        0x0003, 0x004e, 0x0000, 0x0003, 0x007c, 0x0000, 0x000a, 
        0x005b, 0x0002, 0x000a, 0x0061, 0x007a, 0x0030, 0x0039, 
        0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 0x007c, 
        0x0000, 0x000a, 0x005b, 0x0002, 0x000a, 0x0061, 0x007a, 
        0x0030, 0x0039, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 
        0x0003, 0x007c, 0x0000, 0x000a, 0x005b, 0x0002, 0x000a, 
        0x0061, 0x007a, 0x0030, 0x0039, 0x007c, 0x0000, 0x0003, 
        0x004e, 0x0000, 0x0003, 0x005b, 0x0002, 0x0007, 0x0061, 
        0x007a, 0x0030, 0x0039, 0x0045, 0x0000, 0x0000, 
    };

    public String filter(String input) throws StringFilterException
    {
        if(input != null)
        {
            RE usernamePattern = 
                new RE(new REProgram(usernamePatternInstructions));
                
            if(!usernamePattern.match(input))
            {
                throw new StringFilterException(0, "UsernameStringFilter",
                                                "Invalid username " 
                                                 + "format.");
            }
            else
                return input;
        }
        else
            throw new StringFilterException(0, "UsernameStringFilter",
                                            "Username not defined.");
    }
}
     
